services:
  db:
    image: mysql:8.4
    container_name: mysql_b2b
    environment:
      - MYSQL_ROOT_PASSWORD=${DB_PASSWORD:-root}
      - MYSQL_DATABASE=${DB_NAME:-B2B}
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./db:/docker-entrypoint-initdb.d:ro
    healthcheck:
      test: ["CMD-SHELL", "mysqladmin ping -h 127.0.0.1 -u root -p$${MYSQL_ROOT_PASSWORD} --silent"]
      interval: 5s
      timeout: 3s
      retries: 10

  customers:
    build: .
    container_name: customers_api
    command: ["node", "src/B2B-customers-api/index-customers.js"]
    environment:
      - CUSTOMERS_PORT=3001
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_NAME=${DB_NAME:-B2B}
      #- SERVICE_TOKEN=${SERVICE_TOKEN:-service-secret}
      - SERVICE_TOKEN=mPTeRurtXx76WP5m7qo6amXvAU6Cbkonig0hVLdR1PVbQ6op0ID0F11s
      - ISLOCAL=true
      - CUSTOMERS_API_BASE_EXTERNAL= https://cb5d4af38368.ngrok-free.app
      - PRODUCTS_API_BASE_EXTERNAL= https://c9316486ca32.ngrok-free.app
      - CUSTOMERS_API_BASE= http://customers:3001
      - PRODUCTS_API_BASE= http://products:3002
      - PORT_PRODUCTS=3002
      - PORT_CUSTOMERS=3001
    ports:
      - "3001:3001"
    depends_on:
      db:
        condition: service_healthy

  products:
    build: .
    container_name: products_api
    command: ["node", "src/B2B-orders-api/index-products.js"]
    environment:
      - PRODUCTS_PORT=3002
      - DB_HOST=db
      - DB_PORT=3306
      - DB_USER=root
      - DB_PASSWORD=${DB_PASSWORD:-root}
      - DB_NAME=${DB_NAME:-B2B}
      - SERVICE_TOKEN=mPTeRurtXx76WP5m7qo6amXvAU6Cbkonig0hVLdR1PVbQ6op0ID0F11s
      - ISLOCAL=true
      - CUSTOMERS_API_BASE_EXTERNAL= https://cb5d4af38368.ngrok-free.app
      - PRODUCTS_API_BASE_EXTERNAL= https://c9316486ca32.ngrok-free.app
      - CUSTOMERS_API_BASE= http://customers:3001
      - PRODUCTS_API_BASE= http://products:3002
      - PORT_PRODUCTS=3002
      - PORT_CUSTOMERS=3001
    ports:
      - "3002:3002"
    depends_on:
      db:
        condition: service_healthy

  orchestrator:
    build: .
    container_name: orchestrator_api
    command: ["node", "src/B2B-lambda-orchestrator-api/index-orchestrator.js"]
    environment:
      - ORCHESTRATOR_PORT=3000
      #- SERVICE_TOKEN=${SERVICE_TOKEN:-service-secret}
      - ORDERS_API_BASE=http://products:3002
      - SERVICE_TOKEN=mPTeRurtXx76WP5m7qo6amXvAU6Cbkonig0hVLdR1PVbQ6op0ID0F11s
      - ISLOCAL=true
      - CUSTOMERS_API_BASE_EXTERNAL= https://cb5d4af38368.ngrok-free.app
      - PRODUCTS_API_BASE_EXTERNAL= https://c9316486ca32.ngrok-free.app
      - CUSTOMERS_API_BASE= http://customers:3001
      - PRODUCTS_API_BASE= http://products:3002
      - PORT_PRODUCTS=3002
      - PORT_CUSTOMERS=3001
    ports:
      - "3000:3000"
    depends_on:
      customers:
        condition: service_started
      products:
        condition: service_started


volumes:
  mysql_data:
